---
layout: post
title: "002.사소한 실수"
date: 2021-05-11T13:34:21Z
categories: ["Another Bug"]
---

# 서문
때는 만든 프레임워크로 만든 게임을 릴리즈 모드로 배포하도록 가능하게 만들던 중이었다. 윈도우 상에서 릴리즈 모드에서 콘솔 창이 나오지 않고 바로 창이 뜨도록 만들려고 했고, 전처리문을 통해서 해당 기능을 구현했다. 디버그 관련 매크로 관련 선언 여부로 디버그 모드를 판단하고 디버그 모드일 때만 ```main()``` 함수로 바로 들어가고 아니면 ```WinMain()``` 함수를 통해서 들어가도록 만들었다.

{% highlight cpp %}
#if DEBUG
int main(...)
#else
int WinMain(...)
#endif
{
    ...
}
{% endhighlight %}

문제는 프로그램을 실행할 때 받은 인자들 또한 넘겨주고 싶었다. 하지만 WinMain 함수에서는 argc, argv 인자가 없었기 때문에 방법을 찾기 시작했다.

{% highlight cpp %}
___argc
___argv
{% endhighlight %}

결국 두 매크로를 찾았는데 해당 함수를 통해서 콘솔로 실행할 때 처럼 인자를 넘겨받을 수 있게 되었다.

여기까지만 보면 해피엔딩을 맞이한 것 같지만 결국 귀찮음 때문에 별다른 변수 선언 없이 사용할 수 있는 방법을 찾다가 main 함수를 통해 받는 인자의 이름을 저런 식으로 변경한다고 하더라도 동일하게 돌아가지 않을까 했다.

이렇게 바꾼 뒤 릴리즈 모드에서는 문제없이 작동했다. 하지만 디버그 모드일 때 문제가 발생하였다.

# 문제
main 함수를 통해서 argc 인자를 받는데 잘못된 메모리 접근 오류가 뜨면서 프로그램이 crash를 띄운 것이다. 

확인 결과 __argc 메크로는 ```__p___argc()``` 함수를 통해서 인자를 받아오고 __argv 메크로또한 ```__p___argv() ```함수를 통해 관련 변수를 받아왔다.

{% highlight cpp %}
_ACRTIMP int*       __cdecl __p___argc (void);
_ACRTIMP char***    __cdecl __p___argv (void);

#define __argc  (*__p___argc())
#define __argv  (*__p___argv())
{% endhighlight %}

# 고민
문제는 또 ```__p___argc()``` 랑 ```__p___argv()``` 의 주소값이 실제 주소값을 가리키고 있는 것이다. 즉 아무런 인자를 추가하지 않고 실행했을 때 ```__p___argc``` 는 1, ```__p___argv``` 는 현재 프로그램 실행 위치 문자열의 배열을 가지고 있었다.

처음에는 단순하게 SubSystem이 윈도우랑 콘솔일 때 다르게 작동하지 않을까 하는 생각이었다. 생각해봤는데 그럴듯하기도 했고 그렇다면 이 이유가 설명되기도 했기 때문이다. 근데 이런 상황이 나왔다면 인터넷에 난리가 나거나 문서가 업데이트 됬을 텐데 그러진 않았으니 자연스럽게 아니라는 결론을 얻었다.

# 해결
결국 단순한 문제였다.

main의 인자 이름을 __argc랑 __argv로 설정해놨고 해당 함수는 포인터의 값을 가리키고 있으니 변수에 값이 대입될 때 함수 포인터를 덮어씌우면서 생긴 일이었다.

결국 main의 인자는 국룰로 설정하고 WinMain 으로 실행될 때만 __argc랑 __argv메크로를 통해서 argc, argv 변수를 수동으로 초기화하도록 수정하면서 문제는 해결됬다.

{% highlight cpp %}
#if DEBUG
int main(int argc, char *argv[]) {
#else
int WinMain(...) {
    auto argc = __argc;
    auto argv = __argv;
#endif

    ...
}
{% endhighlight %}

# 참고
## __argc 

프로그램에 전달된 명령줄 인수의 수 

*main 함수의 첫번째 인자와 동일*


## __argv 
프로그램 인수가 포함된 싱글바이트 문자 혹은 멀티바이트 문자열의 배열

*main 함수의 두번째 인자와 동일*

## __wargv
프로그램 인수가 포함된 와이드 문자열의 배열

[MSDN](https://docs.microsoft.com/ko-kr/cpp/c-runtime-library/argc-argv-wargv?view=msvc-160)